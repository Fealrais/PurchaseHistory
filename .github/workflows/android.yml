name: Android Build apk and Upload Release

on:
  push:
    branches: [ "main","ci-test" ]

jobs:
  android-build:
    name: Android Build And Deploy
    runs-on: ubuntu-22.03 # using ubuntu latest version / or you can use a specific version
    steps:
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d-%H%M%S')" >> $GITHUB_ENV

      - name: Check out Git repository # clone the repo to local ci workspace
        uses: actions/checkout@v2

      - name: Set up our JDK environment # setup JDK environment: mandatory as we need to build  android project
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 17


      - name: Setup Android SDK 
        uses: android-actions/setup-android@v3 

      # configure cash for gradle : will help to reduce build time
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Make Gradlew Executable
        run: chmod +x ./gradlew

      
      - name: Generate App APK
        id: generate_apk
        run: |
          ./gradlew assembleRelease --no-daemon


      - name: Sign Android release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ./app/build/outputs/apk/release
          signingKeyBase64: ${{secrets.ANDROID_SIGNING_KEY}}
          alias: ${{secrets.ANDROID_ALIAS}}
          keyStorePassword: ${{secrets.ANDROID_KEY_STORE_PASSWORD}}
          keyPassword: ${{secrets.ANDROID_KEY_PASSWORD}}

      - name: Create Release in GitHub
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: APK Release ${{ env.date }}
          tag_name: v${{env.date}}
          body: |
            # Latest android release of the application
            ## ${{ github.event.head_commit.message }}
            ### Date: ${{ env.date }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ${{steps.sign_app.outputs.signedReleaseFile}}
          asset_name: apk-release-v${{ env.version }}.apk
          asset_content_type: application/vnd.android.package-archive
